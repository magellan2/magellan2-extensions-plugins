<project name="MapCleaner" default="distribute">
	<description>
    This is the ANT compile script for MapCleaner. This script helps you
    to compile a distributable version of MapCleaner.
    
    Please call one of the following public targets:
      - distribute
  </description>

	<property name="VERSION.MAJOR" value="1" />
	<property name="VERSION.MINOR" value="1" />
	<property name="VERSION.SUB" value="0" />

	<property name="VERSION" value="${VERSION.MAJOR}_${VERSION.MINOR}_${VERSION.SUB}" />
	<property name="VERSION.POINTED" value="${VERSION.MAJOR}.${VERSION.MINOR}.${VERSION.SUB}" />

	<!-- Some properties -->
	<property name="src.ext" location="${basedir}/src" />
	<property name="etc.ext" location="${basedir}/etc" />
	<property name="classes" location="${basedir}/classes" />
	<property name="bin" location="${basedir}/bin" />
	<property name="release" location="${basedir}/release" />

	<!-- Compile Settings -->
	<property name="debug" value="on" />
	<property name="optimize" value="off" />
	<property name="build.compiler" value="javac1.5" />
	<property name="compile.target" value="1.5" />
	<property name="compile.encoding" value="ISO-8859-1" />

	<path id="magellan.class.path">
		<pathelement path="${java.class.path}/" />
		<pathelement path="${basedir}/../Magellan2/bin" />
	</path>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *  This target compiles and packs the mapclean plugin.           * -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="build">
		<echo message="Compiling..." />

		<antcall target="clear-classes" />
		<mkdir dir="${classes}" />

		<javac srcdir="${src.ext}" 
			   destdir="${classes}" 
			   includes="**" 
			   source="${compile.target}" 
			   target="${compile.target}" 
			   encoding="${compile.encoding}" 
			   optimize="${optimize}" 
			   fork="true" 
			   memoryInitialSize="128m" 
			   memoryMaximumSize="256m" 
			   debug="${debug}">
			<!--<compilerarg value="-Xlint:unchecked"/>-->
			<!--<compilerarg value="-Xlint:deprecation"/>-->
			<classpath refid="magellan.class.path" />
		</javac>
	</target>
	
	<target name="distribute" depends="build">
		<echo message="Building Map Cleaner JAR file" />

		<!-- delete old library -->
		<delete file="${release}/MapCleaner.jar" failonerror="false" />

		<copy file="${etc.ext}/manifest.mf.mapcleaner.template" tofile="${etc.ext}/manifest.mf" overwrite="yes">
			<filterset>
				<filter token="VERSION" value="${VERSION.POINTED}" />
				<filter token="BUILD" value="${build.number}" />
				<filter token="USER" value="${user.name}" />
			</filterset>
		</copy>


		<!-- JAR File erzeugen -->
		<mkdir dir="${release}" />
		<jar jarfile="${release}/MapCleaner.jar" basedir="${classes}" 
			 manifest="${etc.ext}/manifest.mf">
	    	
	    	<fileset dir="${src.ext}">
			 	<include name="**/*.properties"/>
	    	</fileset>
			<fileset dir="${basedir}">
				<include name = "LICENSE.txt"/>
				<include name = "COPYING.txt"/>
				<include name = "CHANGELOG.txt"/>
			</fileset>
			<fileset dir="${etc.ext}">
				<include name = "README.txt"/>
			</fileset>
		</jar>

		<delete file="${etc.ext}/manifest.mf" failonerror="false" />

		<antcall target="clear-classes" />
	</target>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="clear-classes">
		<!-- cleaning classes directory by creating&deleting and creating it -->
		<echo message="Cleaning output folder" />
		<mkdir dir="${classes}" />
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${classes}" includes="**" />
		</delete>
	</target>

	<!-- *************************************************************** -->
	<!-- *                                                             * -->
	<!-- *************************************************************** -->
	<target name="clear-release">
		<!-- cleaning release directory by creating&deleting and creating it -->
		<echo message="Cleaning release folder" />
		<mkdir dir="${release}" />
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${release}" includes="**" />
		</delete>
		<mkdir dir="${release}" />
	</target>

</project>