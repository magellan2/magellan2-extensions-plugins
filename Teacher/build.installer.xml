<project name="teacher-plugin" default="create-installer">
  <description>
    This is the ant script for creating the teacher plugin
  	for Magellan2. You need to setup some paths if you
  	want to use this script to compile a Install-JAR file.
  </description>

  <!-- Some properties -->
  <property name="sources"      location="${basedir}/src"/>
  <property name="classes"      location="${basedir}/classes"/>
  <property name="library"      location="${basedir}/lib"/>
  <property name="release"      location="${basedir}/release"/>
  <property name="magellan2"    location="${basedir}/../Magellan2/"/>
  <property name="installer"    location="${magellan2}/installer"/>

  <property name="plugin.name"  value="teacher-plugin.jar"/>
  <property name="installer.name"  value="teacher-installer.jar"/>

  <!-- Compile Settings -->
  <property name="debug"             value="on" />
  <property name="optimize"          value="off" />
  <property name="build.compiler"    value="javac1.5"/>
  <property name="compile.target"    value="1.5"/>
  <property name="compile.encoding"  value="ISO-8859-1"/>


  <path id="plugin.class.path">
    <pathelement path="${java.class.path}/" />
    <fileset dir="${library}"><include name="**/*.jar" /></fileset>
    <fileset dir="${magellan2}/lib"><include name="**/*.jar" /></fileset>
  </path>
	
  <!-- *************************************************************** -->
  <!-- *                                                             * -->
  <!-- *  This target compiles and packs the magellan library.       * -->
  <!-- *                                                             * -->
  <!-- *************************************************************** -->
  <target name="create-installer" description="Run this to create a installer jar for this plugin">
    <echo message="Compiling Plug-In..." />
  	<echo message="Using Magellan sources in ${magellan2}"/>

    <antcall target="clear-classes"/>
    <mkdir dir="${classes}" />
  	
  	<!--
           fork="true"
           memoryInitialSize="128m"
           memoryMaximumSize="256m"
  	-->
  	
    <javac srcdir="${sources}:${magellan2}/src-library:${magellan2}/src-client"
           destdir="${classes}"
           includes="**"
           source="${compile.target}"
           target="${compile.target}"
           encoding="${compile.encoding}"
           optimize="${optimize}"
           debug="${debug}">
      <!--<compilerarg value="-Xlint:unchecked"/>-->
      <!--<compilerarg value="-Xlint:deprecation"/>-->
      <classpath refid="plugin.class.path"/>
    </javac>
  	
    <delete includeEmptyDirs="true" failonerror="false">
      <fileset dir="${classes}/magellan/client" includes="**" />
      <fileset dir="${classes}/magellan/library" includes="**" />
    </delete>
  	
    <echo message="Building Teacher Plugin JAR file" />
  	
    <!-- JAR File erzeugen -->
    <buildnumber file=".build.number"/>
    <jar jarfile="${plugin.name}" basedir="${classes}">
      <manifest>
        <attribute name="Built-By" value="stm" />
        <attribute name="Specification-Title" value="Magellan Teacher Plugin [build ${build.number}]" />
        <attribute name="Specification-Vendor" value="Steffen Mecke"/>
      </manifest>
    </jar>
  	
    <antcall target="clear-classes"/>
  	
    <!-- delete old release files -->
    <mkdir dir="${release}" />
    <delete includeEmptyDirs="true" failonerror="false">
      <fileset dir="${release}" includes="**" />
    </delete>
    <mkdir dir="${release}" />

  	<java jar="${installer}/izpack/standalone-compiler.jar" fork="true" failonerror="true">
      <arg value="${basedir}/izpack-install.xml"/>
      <arg value="-b"/>
      <arg value="."/>
      <arg value="-o"/>
      <arg value="${release}/${installer.name}"/>
      <arg value="-k"/>
      <arg value="standard"/>
 
      <classpath>
        <pathelement path="${java.class.path}/" />
        <fileset dir="${installer}/izpack/">
          <include name="**/*.jar" />
        </fileset>
      </classpath>
  	</java>
  </target>
	

  <!-- *************************************************************** -->
  <!-- *                                                             * -->
  <!-- *************************************************************** -->
  <target name="clear-classes">
  	<!-- cleaning classes directory by creating&deleting and creating it -->
    <echo message="Cleaning output folder"/>
    <mkdir dir="${classes}" />
    <delete includeEmptyDirs="true" failonerror="false">
      <fileset dir="${classes}" includes="**" />
    </delete>
  </target>
</project>